{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "Portifólio API",
    "description": "Api de manutenção do portifólio."
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "About-me"
    },
    {
      "name": "Projects"
    },
    {
      "name": "Posts"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/about-me": {
      "post": {
        "tags": [
          "About-me"
        ],
        "description": "Create about-me infos",
        "responses": {
          "200": {
            "description": "success in create about-me"
          },
          "400": {
            "description": "error in craete about-me",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "description": "About-me info",
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/SchemaAboutMe"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "About-me"
        ],
        "description": "Get about-me info",
        "responses": {
          "200": {
            "description": "success in get about-me",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaAboutMe"
                }
              }
            }
          },
          "400": {
            "description": "error in get about-me",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": [
          "Projects"
        ],
        "description": "This router is create new projects in portifolio",
        "responses": {
          "200": {
            "description": "success in create project"
          },
          "400": {
            "description": "error in create project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "description": "Infos the project",
              "schema": {
                "$ref": "#/components/schemas/SchemaProject"
              }
            }
          }
        }
      }
    },
    "/projects/paginate": {
      "get": {
        "tags": [
          "Projects"
        ],
        "description": "Get all projects per page",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "amount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success in listing the projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaProjectList"
                }
              }
            }
          },
          "400": {
            "description": "error in listing the projects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/projects/:id": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "description": "Delete project per id",
        "responses": {
          "200": {
            "description": "Success in delete project"
          },
          "400": {
            "description": "error in delete project",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "description": "Create new post",
        "responses": {
          "200": {
            "description": "Success in created post"
          },
          "400": {
            "description": "error in craete post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "description": "Post",
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/SchemaPost"
              }
            }
          }
        }
      }
    },
    "/posts/paginate": {
      "get": {
        "tags": [
          "Posts"
        ],
        "description": "Get all posts per page",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "amount",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success in listing the posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaPostsList"
                }
              }
            }
          },
          "400": {
            "description": "error in listing the posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/posts/:id": {
      "get": {
        "tags": [
          "Posts"
        ],
        "description": "Get post per id",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success in get post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaPost"
                }
              }
            }
          },
          "400": {
            "description": "error in listing the posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "description": "Update post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success in update post"
          },
          "400": {
            "description": "error in update post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "description": "Post",
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/SchemaPost"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "description": "Delete post",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "id"
          }
        ],
        "responses": {
          "200": {
            "description": "Success in delete post"
          },
          "400": {
            "description": "error in delete post",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        }
      }
    },
    "/company-history": {
      "post": {
        "tags": [
          "Company History"
        ],
        "description": "Create new company history",
        "responses": {
          "200": {
            "description": "Success in created new company history"
          },
          "400": {
            "description": "error in craete company history",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          },
          "500": {
            "description": "error in server",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "description": "Post",
              "type": "object",
              "schema": {
                "$ref": "#/components/schemas/SchemaCompanyHistory"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SchemaError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "xxx"
          },
          "message": {
            "type": "string",
            "example": "message"
          }
        }
      },
      "SchemaAboutMe": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Uiaran"
          },
          "history": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin nunc vel libero volutpat, nec sodales magna dapibus. Nunc suscipit ultricies semper."
          },
          "birth": {
            "type": "string",
            "example": "Uiaran"
          },
          "hometown": {
            "type": "string",
            "example": "Itajai-SC"
          }
        }
      },
      "SchemaProject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Users Tasks"
          },
          "description": {
            "type": "string",
            "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin nunc vel libero volutpat, nec sodales magna dapibus. Nunc suscipit ultricies semper."
          },
          "type": {
            "type": "string",
            "example": "front-end"
          },
          "stacks": {
            "type": "array",
            "example": [
              "Node-JS",
              "Next-JS"
            ]
          },
          "git": {
            "type": "string",
            "example": "https://"
          },
          "url": {
            "type": "string",
            "example": "https://"
          }
        }
      },
      "SchemaProjectList": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "quantity_items": {
            "type": "number",
            "example": 1000
          },
          "projects": {
            "type": "array",
            "example": []
          }
        }
      },
      "SchemaPost": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "string"
          },
          "img": {
            "type": "string",
            "example": "string"
          },
          "description": {
            "type": "string",
            "example": "string"
          },
          "tags": {
            "type": "array",
            "example": []
          },
          "content": {
            "type": "string",
            "example": "string"
          }
        }
      },
      "SchemaPostsList": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "quantity_items": {
            "type": "number",
            "example": 1000
          },
          "posts": {
            "type": "array",
            "example": []
          }
        }
      },
      "SchemaCompanyHistory": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string"
          },
          "office": {
            "type": "string"
          },
          "office_description": {
            "type": "string"
          },
          "when_arrived": {
            "type": "string"
          },
          "when_came_out": {
            "type": "string"
          }
        }
      }
    }
  }
}